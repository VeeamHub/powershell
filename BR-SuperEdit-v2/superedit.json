[{
		"Name": "Generic Backup Jobs",
        "ListExpression": "get-vbrjob | ? { $_.jobtype -in @([Veeam.Backup.Model.EDbJobType]::Backup) }",
        "NamePath": "name",
		"IdPath": "id",
        "IdConvert": "string",
		"Actions": [{
				"Name": "Retention in points",
				"Values": [],
                "ValueExpression": "(1..99)",
                "ValueConvert": "int",
				"PreExpression": "# Retention Point Script
$jobs = get-vbrjob
function Set-SECyclesRetention {
  param($job,$val) 
  $o = $job | Get-VBRJobOptions
  $o.BackupStorageOptions.RetentionType = [Veeam.Backup.Model.ERetentionType]::Cycles
  $o.BackupStorageOptions.RetainCycles = $val
  $job | Set-VBRJobOptions -Options $o
}

$supereditval = ##val##
$idlist = @()
",
				"ForEachExpression": "$idlist += ##id##",
				"PostExpression": "
foreach ($job in ($jobs | ? { $_.id -in $idlist} )) {
    Set-SECyclesRetention -job $job -val $supereditval
}
"
			},{
				"Name": "Retention in days",
				"Values": [],
                "ValueExpression": "(1..99)",
                "ValueConvert": "int",
				"PreExpression": "# Retention Day Script
$jobs = get-vbrjob
function Set-SEDaysRetention {
  param($job,$val) 
  $o = $job | Get-VBRJobOptions
  $o.BackupStorageOptions.RetentionType = [Veeam.Backup.Model.ERetentionType]::Days
  $o.BackupStorageOptions.RetainDaysToKeep = $val
  $job | Set-VBRJobOptions -Options $o
}


$supereditval = ##val##
$idlist = @()
",
				"ForEachExpression": "$idlist += ##id##",
				"PostExpression": "
foreach ($job in ($jobs | ? { $_.id -in $idlist} )) {
    Set-SEDaysRetention -job $job -val $supereditval
}
"
			},
			{
				"Name": "Storage Block Size",
				"Values": [],
                "ValueConvert": "string",
                "ValueExpression": "([Veeam.Backup.Common.EKbBlockSize]::GetValues([Veeam.Backup.Common.EKbBlockSize]))",
                "PreExpression": "# BlockSize Edit
$jobs = get-vbrjob
function Set-SEBlockSize {
  param($job,$val) 
  $o = $job | Get-VBRJobOptions
  $o.BackupStorageOptions.StgBlockSize = $val
  $job | Set-VBRJobOptions -Options $o
}


$supereditval = ##val##
$idlist = @()",
                "ForEachExpression": "$idlist += ##id##",
				"PostExpression": "
foreach ($job in ($jobs | ? { $_.id -in $idlist} )) {
    Set-SEBlockSize -job $job -val $supereditval
}
"
			}
		]
	},
	{
        "Name": "Generic Simple Backup Copy Jobs",
        "ListExpression": "get-vbrjob | ? { $_.jobtype -in @([Veeam.Backup.Model.EDbJobType]::SimpleBackupCopyPolicy) }",
        "NamePath": "name",
		"IdPath": "id",
        "IdConvert": "string",
		"Actions": [{
				"Name": "Retention in points",
				"Values": [],
                "ValueExpression": "(1..99)",
                "ValueConvert": "int",
				"PreExpression": "# Retention Point Script
$jobs = get-vbrjob
function Set-SECyclesRetention {
  param($job,$val) 
  $o = $job | Get-VBRJobOptions
  $o.BackupStorageOptions.RetentionType = [Veeam.Backup.Model.ERetentionType]::Cycles
  $o.BackupStorageOptions.RetainCycles = $val
  $job | Set-VBRJobOptions -Options $o
}

$supereditval = ##val##
$idlist = @()
",
				"ForEachExpression": "$idlist += ##id##",
				"PostExpression": "
foreach ($job in ($jobs | ? { $_.id -in $idlist} )) {
    Set-SECyclesRetention -job $job -val $supereditval
}
"
			},{
				"Name": "Retention in days",
				"Values": [],
                "ValueExpression": "(1..99)",
                "ValueConvert": "int",
				"PreExpression": "# Retention Day Script
$jobs = get-vbrjob
function Set-SEDaysRetention {
  param($job,$val) 
  $o = $job | Get-VBRJobOptions
  $o.BackupStorageOptions.RetentionType = [Veeam.Backup.Model.ERetentionType]::Days
  $o.BackupStorageOptions.RetainDaysToKeep = $val
  $job | Set-VBRJobOptions -Options $o
}


$supereditval = ##val##
$idlist = @()
",
				"ForEachExpression": "$idlist += ##id##",
				"PostExpression": "
foreach ($job in ($jobs | ? { $_.id -in $idlist} )) {
    Set-SEDaysRetention -job $job -val $supereditval
}
"
			}
        ]
	},
    {
        "Name": "VMware Proxies",
        "ListExpression": "get-vbrviproxy",
        "NamePath": "name",
		"IdPath": "id",
        "IdConvert": "string",
		"Actions": [{
				"Name": "Task Slot",
				"Values": [],
                "ValueExpression": "(1..99)",
                "ValueConvert": "int",
				"PreExpression": "# VI Proxy Tasks Slots
$totallist = (get-vbrviproxy)
$supereditval = ##val##
$idlist = @()
",
				"ForEachExpression": "$idlist += ##id##",
				"PostExpression": "
foreach ($o in ($totallist | ? { $_.id -in $idlist} )) {
    $o | Set-VBRViProxy -MaxTasks $supereditval
}
"
			}]
    }
]